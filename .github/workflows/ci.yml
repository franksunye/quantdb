name: QuantDB CI

on:
  push:
    branches: [ main, develop, sprint* ]
  pull_request:
    branches: [ main, develop, sprint* ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov flake8 black isort mypy tenacity psutil

    - name: Create required directories
      run: |
        mkdir -p database
        mkdir -p data/raw
        mkdir -p data/processed
        mkdir -p logs
        mkdir -p coverage_reports

    - name: Initialize database
      run: |
        python -c "from tests.init_test_db import init_test_db; init_test_db()"

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

    - name: Check formatting with black
      run: |
        black --check --line-length=100 .

    - name: Check imports with isort
      run: |
        isort --check-only --profile=black --line-length=100 .

    - name: Type check with mypy
      run: |
        mypy --ignore-missing-imports --disallow-untyped-defs=False src

    - name: Test with pytest and coverage
      run: |
        python scripts/test_coverage_ci.py --threshold 10

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage_reports/coverage.xml
        fail_ci_if_error: false
